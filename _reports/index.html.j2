{# description: top-level integration results tests #}
<h2>Integration Test Results by Device/Platform</h2>
<table>
  <tr>
    <th>Device</th>
    <th>Provider</th>
    <th>Passed</th>
    <th class='right'>Not<br>supported</th>
    <th class='right'>Crashed</th>
    <th class='right'>Config<br>failed</th>
    <th class='right'>Validation<br>failed</th>
    <th class='right'>Caveats</th>
  </tr>
{% for device in results.keys()|sort %}
{%   for provider,p_data in results[device].items() if not provider.startswith('_') %}
  <tr>
    <td>{% if loop.first %}{{ device }}{% endif %}</td>
    <td><a href="_html/{{ device }}-{{provider}}.html">{{ provider }}</a></td>
    <td class='right'>{{ p_data._count.pass or '' }}</td>
    <td class='right'>{{ p_data._count.unsupported or '' }}</td>
    <td class='right'>{{ p_data._count.up or '' }}</td>
    <td class='right'>{{ p_data._count.config or '' }}</td>
    <td class='right'>{{ p_data._count.validate or '' }}</td>
    <td class='right'>{{ p_data._count.caveat or '' }}</td>
  </tr>
{%   endfor %}
{% endfor %}
</table>
<p><b>Notes:</b></p>
<ul>
  <li>Not supported: <em>netlab</em> does not support the function on
      the device (or the device cannot implement it)</li>
  <li>Crashed: <b>netlab up</b> crashed, usually due to VM initialization failure
      or timeout</li>
  <li>Config failed: <b>netlab initial</b> failed, usually due to configuration templates
      producing commands that the device refuses to accept</li>
  <li>Validation failed: <b>netlab validate</b> reported an error.</li>
</ul>
<h2>Feature Coverage</h2>
<table>
  <tr>
    <th>Feature</th>
    <th class='center'>Passed</th>
    <th class='center'>Caveat</th>
    <th class='center'>Validation<br>failed</th>
    <th class='center'>Configuration<br>failed</th>
    <th class='center'>Crashed</th>
  <tr>
{% for cn,cd in coverage.items() %}
  <tr>
    <td><a href='_html/{{ cd._path }}.html'>{{ cd.title }}</a></td>
    <td class='center'>{{ cd._count.pass or '' }}</td>
    <td class='center'>{{ cd._count.caveat or '' }}</td>
    <td class='center'>{{ cd._count.failed or '' }}</td>
    <td class='center'>{{ cd._count['config failed'] or '' }}</td>
    <td class='center'>{{ cd._count.crashed or '' }}</td>
  </tr>
{% endfor %}
</table>