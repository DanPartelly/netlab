[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [probe]
ok: [x1]
ok: [x2]
ok: [dut]

TASK [Find device readiness script] ********************************************
ok: [probe]
ok: [x2]
ok: [x1]
ok: [dut]

TASK [Wait for device to become ready] *****************************************
skipping: [dut]
skipping: [probe]
skipping: [x1]
skipping: [x2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, probe, x1, x2

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [probe]
ok: [x1]
ok: [x2]
ok: [dut]

TASK [Find configuration template for initial] *********************************
ok: [probe]
ok: [x2]
ok: [x1]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
skipping: [probe]
skipping: [x1]
skipping: [x2]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [probe]
ok: [x1]
ok: [x2]
ok: [dut]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/initial-clab.yml for probe, x1, x2

TASK [ios_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/ios.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [dut]

TASK [Attempt to load VRF kernel module] ***************************************
changed: [probe -> localhost]
changed: [x1 -> localhost]
changed: [x2 -> localhost]

TASK [Disable FRR management VRF when modprobe fails] **************************
skipping: [probe]
skipping: [x1]
skipping: [x2]

TASK [include_tasks] ***********************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/deploy-config.yml for probe, x1, x2

TASK [template] ****************************************************************
changed: [x2]
changed: [x1]
changed: [probe]

TASK [set_fact] ****************************************************************
ok: [probe]
ok: [x1]
ok: [x2]

TASK [run /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
changed: [probe]
changed: [x1]
changed: [x2]

TASK [run vtysh to import initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
skipping: [probe]
skipping: [x1]
skipping: [x2]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [probe]
ok: [x1]
ok: [x2]
ok: [dut]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, probe, x1, x2 => (item=bgp)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, probe, x1, x2 => (item=ospf)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, probe, x1, x2 => (item=routing)

TASK [Figure out whether to deploy the module bgp on current device] ***********
ok: [probe]
ok: [x1]
ok: [x2]
ok: [dut]

TASK [Find configuration template for bgp] *************************************
ok: [x1]
ok: [probe]
ok: [x2]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
skipping: [probe]
skipping: [x1]
skipping: [x2]

TASK [Find configuration deployment deploy_script for bgp] *********************
ok: [probe]
ok: [x1]
ok: [dut]
ok: [x2]

TASK [Deploy bgp configuration] ************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for probe, x1, x2

TASK [ios_config: deploying bgp from /home/pipi/net101/tools/netsim/ansible/templates/bgp/ios.j2] ***
changed: [dut]

TASK [template] ****************************************************************
changed: [x2]
changed: [x1]
changed: [probe]

TASK [set_fact] ****************************************************************
ok: [probe]
ok: [x1]
ok: [x2]

TASK [run /tmp/config.sh to deploy bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
skipping: [probe]
skipping: [x1]
skipping: [x2]

TASK [run vtysh to import bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
changed: [x2]
changed: [x1]
changed: [probe]

TASK [Figure out whether to deploy the module ospf on current device] **********
ok: [probe]
ok: [x1]
ok: [x2]
ok: [dut]

TASK [Find configuration template for ospf] ************************************
skipping: [x1]
skipping: [x2]
ok: [probe]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
skipping: [probe]
skipping: [x1]
skipping: [x2]

TASK [Find configuration deployment deploy_script for ospf] ********************
skipping: [x1]
skipping: [x2]
ok: [probe]
ok: [dut]

TASK [Deploy ospf configuration] ***********************************************
skipping: [x1]
skipping: [x2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for probe

TASK [ios_config: deploying ospf from /home/pipi/net101/tools/netsim/ansible/templates/ospf/ios.j2] ***
changed: [dut]

TASK [template] ****************************************************************
changed: [probe]

TASK [set_fact] ****************************************************************
ok: [probe]

TASK [run /tmp/config.sh to deploy ospf config from /home/pipi/net101/tools/netsim/ansible/templates/ospf/frr.j2] ***
skipping: [probe]

TASK [run vtysh to import ospf config from /home/pipi/net101/tools/netsim/ansible/templates/ospf/frr.j2] ***
changed: [probe]

TASK [Figure out whether to deploy the module routing on current device] *******
ok: [probe]
ok: [x1]
ok: [x2]
ok: [dut]

TASK [Find configuration template for routing] *********************************
skipping: [x1]
skipping: [x2]
ok: [probe]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
skipping: [probe]
skipping: [x1]
skipping: [x2]

TASK [Find configuration deployment deploy_script for routing] *****************
skipping: [x1]
skipping: [x2]
ok: [probe]
ok: [dut]

TASK [Deploy routing configuration] ********************************************
skipping: [x1]
skipping: [x2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for probe

TASK [ios_config: deploying routing from /home/pipi/net101/tools/netsim/ansible/templates/routing/ios.j2] ***
changed: [dut]

TASK [template] ****************************************************************
changed: [probe]

TASK [set_fact] ****************************************************************
ok: [probe]

TASK [run /tmp/config.sh to deploy routing config from /home/pipi/net101/tools/netsim/ansible/templates/routing/frr.j2] ***
skipping: [probe]

TASK [run vtysh to import routing config from /home/pipi/net101/tools/netsim/ansible/templates/routing/frr.j2] ***
changed: [probe]

PLAY [Deploy custom deployment templates] **************************************

TASK [Run custom configuration deployment scripts] *****************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-custom-config.yml for dut => (item=bgp.policy)

TASK [Find configuration template] *********************************************
ok: [dut]

TASK [fail] ********************************************************************
skipping: [dut]

TASK [Check is the configuration template is a file] ***************************
ok: [dut -> localhost]

TASK [fail] ********************************************************************
skipping: [dut]

TASK [Process template /home/pipi/net101/tools/netsim/extra/bgp.policy/ios.j2 for dut] ***
skipping: [dut]

TASK [Find custom configuration deployment script] *****************************
ok: [dut]

TASK [Run the configuration deployment script] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for dut

TASK [ios_config: deploying bgp.policy from /home/pipi/net101/tools/netsim/extra/bgp.policy/ios.j2] ***
changed: [dut]

PLAY RECAP *********************************************************************
dut                        : ok=33   changed=5    unreachable=0    failed=0    skipped=8    rescued=0    ignored=0   
probe                      : ok=37   changed=9    unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   
x1                         : ok=25   changed=5    unreachable=0    failed=0    skipped=14   rescued=0    ignored=0   
x2                         : ok=25   changed=5    unreachable=0    failed=0    skipped=14   rescued=0    ignored=0   



Use this topology to test BGP local preference on IPv4 and IPv6 prefixes. DUT
has to set node-wide local preference on prefixes received from X1 and
neighbor-specific local preference on prefixes received from X2.

