[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [s3]
ok: [h1]
ok: [h2]
ok: [s1]
ok: [h3]
ok: [h4]
ok: [h5]
ok: [h6]
ok: [s2]

TASK [Find device readiness script] ********************************************
ok: [s3]
ok: [h1]
ok: [h2]
ok: [s1]
ok: [h3]
ok: [h4]
ok: [h6]
ok: [h5]
ok: [s2]

TASK [Wait for device to become ready] *****************************************
skipping: [s1]
skipping: [s2]
skipping: [s3]
skipping: [h1]
skipping: [h2]
skipping: [h3]
skipping: [h4]
skipping: [h5]
skipping: [h6]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3, h1, h2, h3, h4, h5, h6

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [s3]
ok: [h1]
ok: [h2]
ok: [s1]
ok: [h3]
ok: [h4]
ok: [h5]
ok: [h6]
ok: [s2]

TASK [Find configuration template for initial] *********************************
ok: [s3]
ok: [h1]
ok: [h2]
ok: [s1]
ok: [h3]
ok: [h4]
ok: [h5]
ok: [h6]
ok: [s2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]
skipping: [h1]
skipping: [h2]
skipping: [h3]
skipping: [h4]
skipping: [h5]
skipping: [h6]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [s3]
ok: [h1]
ok: [h2]
ok: [s2]
ok: [h3]
ok: [h6]
ok: [h4]
ok: [h5]
ok: [s1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for s1, s2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/cumulus.yml for s3
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/linux.yml for h1, h2, h3, h4, h5, h6

TASK [ios_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/ios.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [s2]
changed: [s1]

TASK [copy cumulus config to /tmp/config.sh] ***********************************
changed: [s3]

TASK [set_fact deployed_config] ************************************************
ok: [s3]

TASK [run /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/cumulus.j2] ***
changed: [s3]

TASK [run vtysh to import initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/cumulus.j2] ***
skipping: [s3]

TASK [template] ****************************************************************
changed: [h1]
changed: [h4]
changed: [h6]
changed: [h3]
changed: [h2]
changed: [h5]

TASK [Execute /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux.j2] ***
changed: [h3]
changed: [h2]
changed: [h5]
changed: [h4]
changed: [h1]
changed: [h6]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3 => (item=vlan)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3 => (item=ospf)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3 => (item=vxlan)

TASK [Figure out whether to deploy the module vlan on current device] **********
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Find configuration template for vlan] ************************************
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]

TASK [Find configuration deployment deploy_script for vlan] ********************
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Deploy vlan configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for s1, s2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/cumulus.yml for s3

TASK [ios_config: deploying vlan from /home/pipi/net101/tools/netsim/ansible/templates/vlan/csr.j2] ***
changed: [s2]
changed: [s1]

TASK [copy cumulus config to /tmp/config.sh] ***********************************
changed: [s3]

TASK [set_fact deployed_config] ************************************************
ok: [s3]

TASK [run /tmp/config.sh to deploy vlan config from /home/pipi/net101/tools/netsim/ansible/templates/vlan/cumulus.j2] ***
changed: [s3]

TASK [run vtysh to import vlan config from /home/pipi/net101/tools/netsim/ansible/templates/vlan/cumulus.j2] ***
skipping: [s3]

TASK [Figure out whether to deploy the module ospf on current device] **********
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Find configuration template for ospf] ************************************
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]

TASK [Find configuration deployment deploy_script for ospf] ********************
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Deploy ospf configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for s1, s2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/cumulus.yml for s3

TASK [ios_config: deploying ospf from /home/pipi/net101/tools/netsim/ansible/templates/ospf/ios.j2] ***
changed: [s1]
changed: [s2]

TASK [copy cumulus config to /tmp/config.sh] ***********************************
changed: [s3]

TASK [set_fact deployed_config] ************************************************
ok: [s3]

TASK [run /tmp/config.sh to deploy ospf config from /home/pipi/net101/tools/netsim/ansible/templates/ospf/cumulus.j2] ***
skipping: [s3]

TASK [run vtysh to import ospf config from /home/pipi/net101/tools/netsim/ansible/templates/ospf/cumulus.j2] ***
changed: [s3]

TASK [Figure out whether to deploy the module vxlan on current device] *********
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Find configuration template for vxlan] ***********************************
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]

TASK [Find configuration deployment deploy_script for vxlan] *******************
ok: [s3]
ok: [s1]
ok: [s2]

TASK [Deploy vxlan configuration] **********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for s1, s2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/cumulus.yml for s3

TASK [ios_config: deploying vxlan from /home/pipi/net101/tools/netsim/ansible/templates/vxlan/csr.j2] ***
changed: [s1]
changed: [s2]

TASK [copy cumulus config to /tmp/config.sh] ***********************************
changed: [s3]

TASK [set_fact deployed_config] ************************************************
ok: [s3]

TASK [run /tmp/config.sh to deploy vxlan config from /home/pipi/net101/tools/netsim/ansible/templates/vxlan/cumulus.j2] ***
changed: [s3]

TASK [run vtysh to import vxlan config from /home/pipi/net101/tools/netsim/ansible/templates/vxlan/cumulus.j2] ***
skipping: [s3]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
h1                         : ok=9    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h2                         : ok=9    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h3                         : ok=9    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h4                         : ok=9    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h5                         : ok=9    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h6                         : ok=9    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
s1                         : ok=27   changed=4    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
s2                         : ok=27   changed=4    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
s3                         : ok=35   changed=8    unreachable=0    failed=0    skipped=9    rescued=0    ignored=0   



This is the multi-vendor version of the vxlan-bridging lab.
Use it to test compatibility of your VXLAN implementation with
Cumulus Linux

* h1, h2 and h3 should be able to ping each other
* h4, h5 and h6 should be able to ping each other

Please note it might take a while for the lab to work due to
OSPF adjacency establishment and STP learning phase

