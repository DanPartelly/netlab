[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [spine]
ok: [l2]
ok: [h1]
ok: [h2]
ok: [l1]

TASK [Find device readiness script] ********************************************
ok: [spine]
ok: [l2]
ok: [h1]
ok: [h2]
ok: [l1]

TASK [Wait for device to become ready] *****************************************
skipping: [spine]
skipping: [l2]
skipping: [h1]
skipping: [h2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/eos-clab.yml for l1

TASK [Wait for cEOS SSH daemon to start] ***************************************
ok: [l1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for spine, l1, l2, h1, h2

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [spine]
ok: [l2]
ok: [h1]
ok: [h2]
ok: [l1]

TASK [Find configuration template for initial] *********************************
ok: [spine]
ok: [l2]
ok: [h2]
ok: [h1]
ok: [l1]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [spine]
skipping: [l1]
skipping: [l2]
skipping: [h1]
skipping: [h2]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [spine]
ok: [l2]
ok: [h2]
ok: [h1]
ok: [l1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/initial-clab.yml for spine, l2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for l1
included: /home/pipi/net101/tools/netsim/ansible/tasks/linux/initial-clab.yml for h1, h2

TASK [Attempt to load VRF kernel module] ***************************************
changed: [spine -> localhost]
changed: [l2 -> localhost]

TASK [Disable FRR management VRF when modprobe fails] **************************
skipping: [spine]
skipping: [l2]

TASK [include_tasks] ***********************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/deploy-config.yml for spine, l2

TASK [template] ****************************************************************
changed: [spine]
changed: [l2]

TASK [set_fact] ****************************************************************
ok: [spine]
ok: [l2]

TASK [run /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
changed: [l2]
changed: [spine]

TASK [run vtysh to import initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
skipping: [spine]
skipping: [l2]

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [l1]

TASK [set_fact] ****************************************************************
ok: [h1]
ok: [h2]

TASK [Create initial container setup from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [h2 -> localhost]
changed: [h1 -> localhost]

TASK [Initial container configuration via /tmp/config-KFbVfGuE-h1.sh] **********
changed: [h2 -> localhost]
changed: [h1 -> localhost]

TASK [file] ********************************************************************
changed: [h1 -> localhost]
changed: [h2 -> localhost]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for l1, l2, spine => (item=vlan)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for l1, l2, spine => (item=bgp)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for l1, l2, spine => (item=vxlan)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for l1, l2, spine => (item=evpn)

TASK [Figure out whether to deploy the module vlan on current device] **********
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Find configuration template for vlan] ************************************
skipping: [spine]
ok: [l2]
ok: [l1]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [l1]
skipping: [l2]
skipping: [spine]

TASK [Find configuration deployment deploy_script for vlan] ********************
skipping: [spine]
ok: [l2]
ok: [l1]

TASK [Deploy vlan configuration] ***********************************************
skipping: [spine]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for l1
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for l2

TASK [eos_config: deploying vlan from /home/pipi/net101/tools/netsim/ansible/templates/vlan/eos.j2] ***
changed: [l1]

TASK [template] ****************************************************************
changed: [l2]

TASK [set_fact] ****************************************************************
ok: [l2]

TASK [run /tmp/config.sh to deploy vlan config from /home/pipi/net101/tools/netsim/ansible/templates/vlan/frr.j2] ***
changed: [l2]

TASK [run vtysh to import vlan config from /home/pipi/net101/tools/netsim/ansible/templates/vlan/frr.j2] ***
skipping: [l2]

TASK [Figure out whether to deploy the module bgp on current device] ***********
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Find configuration template for bgp] *************************************
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [l1]
skipping: [l2]
skipping: [spine]

TASK [Find configuration deployment deploy_script for bgp] *********************
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Deploy bgp configuration] ************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for l1
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for l2, spine

TASK [eos_config: deploying bgp from /home/pipi/net101/tools/netsim/ansible/templates/bgp/eos.j2] ***
changed: [l1]

TASK [template] ****************************************************************
changed: [spine]
changed: [l2]

TASK [set_fact] ****************************************************************
ok: [l2]
ok: [spine]

TASK [run /tmp/config.sh to deploy bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
skipping: [l2]
skipping: [spine]

TASK [run vtysh to import bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
changed: [l2]
changed: [spine]

TASK [Figure out whether to deploy the module vxlan on current device] *********
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Find configuration template for vxlan] ***********************************
skipping: [spine]
ok: [l2]
ok: [l1]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [l1]
skipping: [l2]
skipping: [spine]

TASK [Find configuration deployment deploy_script for vxlan] *******************
skipping: [spine]
ok: [l2]
ok: [l1]

TASK [Deploy vxlan configuration] **********************************************
skipping: [spine]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for l1
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for l2

TASK [eos_config: deploying vxlan from /home/pipi/net101/tools/netsim/ansible/templates/vxlan/eos.j2] ***
changed: [l1]

TASK [template] ****************************************************************
changed: [l2]

TASK [set_fact] ****************************************************************
ok: [l2]

TASK [run /tmp/config.sh to deploy vxlan config from /home/pipi/net101/tools/netsim/ansible/templates/vxlan/frr.j2] ***
changed: [l2]

TASK [run vtysh to import vxlan config from /home/pipi/net101/tools/netsim/ansible/templates/vxlan/frr.j2] ***
skipping: [l2]

TASK [Figure out whether to deploy the module evpn on current device] **********
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Find configuration template for evpn] ************************************
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [l1]
skipping: [l2]
skipping: [spine]

TASK [Find configuration deployment deploy_script for evpn] ********************
ok: [l2]
ok: [spine]
ok: [l1]

TASK [Deploy evpn configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for l1
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for l2, spine

TASK [eos_config: deploying evpn from /home/pipi/net101/tools/netsim/ansible/templates/evpn/eos.j2] ***
changed: [l1]

TASK [template] ****************************************************************
changed: [l2]
changed: [spine]

TASK [set_fact] ****************************************************************
ok: [l2]
ok: [spine]

TASK [run /tmp/config.sh to deploy evpn config from /home/pipi/net101/tools/netsim/ansible/templates/evpn/frr.j2] ***
skipping: [l2]
skipping: [spine]

TASK [run vtysh to import evpn config from /home/pipi/net101/tools/netsim/ansible/templates/evpn/frr.j2] ***
changed: [l2]
changed: [spine]

PLAY [Deploy custom deployment templates] **************************************

TASK [Run custom configuration deployment scripts] *****************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-custom-config.yml for l1, l2 => (item=bgp.session)

TASK [Find configuration template] *********************************************
ok: [l2]
ok: [l1]

TASK [fail] ********************************************************************
skipping: [l1]
skipping: [l2]

TASK [Check is the configuration template is a file] ***************************
ok: [l2 -> localhost]
ok: [l1 -> localhost]

TASK [fail] ********************************************************************
skipping: [l1]
skipping: [l2]

TASK [Process template /home/pipi/net101/tools/netsim/extra/bgp.session/eos.j2 for l1] ***
skipping: [l2]
skipping: [l1]

TASK [Find custom configuration deployment script] *****************************
ok: [l2]
ok: [l1]

TASK [Run the configuration deployment script] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for l1
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for l2

TASK [eos_config: deploying bgp.session from /home/pipi/net101/tools/netsim/extra/bgp.session/eos.j2] ***
changed: [l1]

TASK [template] ****************************************************************
changed: [l2]

TASK [set_fact] ****************************************************************
ok: [l2]

TASK [run /tmp/config.sh to deploy bgp.session config from /home/pipi/net101/tools/netsim/extra/bgp.session/frr.j2] ***
changed: [l2]

TASK [run vtysh to import bgp.session config from /home/pipi/net101/tools/netsim/extra/bgp.session/frr.j2] ***
skipping: [l2]

PLAY RECAP *********************************************************************
h1                         : ok=11   changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h2                         : ok=11   changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
l1                         : ok=41   changed=6    unreachable=0    failed=0    skipped=8    rescued=0    ignored=0   
l2                         : ok=53   changed=13   unreachable=0    failed=0    skipped=16   rescued=0    ignored=0   
spine                      : ok=33   changed=7    unreachable=0    failed=0    skipped=16   rescued=0    ignored=0   



The device under test is an EVPN leaf device using EVPN-over-EBGP. It should
generate EVPN AF routes and accepts EBGP EVPN AF routes with the same AS.

* h1 and h2 should be able to ping each other

Please note it might take a while for the lab to work due to
STP learning phase

