[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [h1]
ok: [h2]
ok: [h3]
ok: [h4]
ok: [h5]
ok: [s1]
ok: [s3]
ok: [s2]

TASK [Find device readiness script] ********************************************
ok: [h2]
ok: [h1]
ok: [h3]
ok: [h4]
ok: [h5]
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Wait for device to become ready] *****************************************
skipping: [h1]
skipping: [h2]
skipping: [h3]
skipping: [h4]
skipping: [h5]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/eos-clab.yml for s1, s2, s3

TASK [Wait for cEOS SSH daemon to start] ***************************************
ok: [s2]
ok: [s1]
ok: [s3]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3, h1, h2, h3, h4, h5

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [h1]
ok: [h2]
ok: [h3]
ok: [s1]
ok: [h4]
ok: [s2]
ok: [s3]
ok: [h5]

TASK [Find configuration template for initial] *********************************
ok: [h2]
ok: [h1]
ok: [h3]
ok: [s2]
ok: [h5]
ok: [s3]
ok: [s1]
ok: [h4]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]
skipping: [h1]
skipping: [h2]
skipping: [h3]
skipping: [h4]
skipping: [h5]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [h1]
ok: [h2]
ok: [s1]
ok: [h3]
ok: [h5]
ok: [h4]
ok: [s2]
ok: [s3]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for s1, s2, s3
included: /home/pipi/net101/tools/netsim/ansible/tasks/linux/initial-clab.yml for h1, h2, h3, h4, h5

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [s3]
changed: [s2]
changed: [s1]

TASK [set_fact] ****************************************************************
ok: [h1]
ok: [h2]
ok: [h3]
ok: [h4]
ok: [h5]

TASK [Create initial container setup from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [h5 -> localhost]
changed: [h1 -> localhost]
changed: [h4 -> localhost]
changed: [h2 -> localhost]
changed: [h3 -> localhost]

TASK [Initial container configuration via /tmp/config-kAoGdKyj-h1.sh] **********
changed: [h2 -> localhost]
changed: [h5 -> localhost]
changed: [h4 -> localhost]
changed: [h1 -> localhost]
changed: [h3 -> localhost]

TASK [file] ********************************************************************
changed: [h2 -> localhost]
changed: [h4 -> localhost]
changed: [h1 -> localhost]
changed: [h3 -> localhost]
changed: [h5 -> localhost]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3 => (item=vlan)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3 => (item=ospf)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for s1, s2, s3 => (item=vxlan)

TASK [Figure out whether to deploy the module vlan on current device] **********
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Find configuration template for vlan] ************************************
ok: [s1]
ok: [s3]
ok: [s2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]

TASK [Find configuration deployment deploy_script for vlan] ********************
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Deploy vlan configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for s1, s2, s3

TASK [eos_config: deploying vlan from /home/pipi/net101/tools/netsim/ansible/templates/vlan/eos.j2] ***
changed: [s3]
changed: [s2]
changed: [s1]

TASK [Figure out whether to deploy the module ospf on current device] **********
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Find configuration template for ospf] ************************************
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]

TASK [Find configuration deployment deploy_script for ospf] ********************
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Deploy ospf configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for s1, s2, s3

TASK [eos_config: deploying ospf from /home/pipi/net101/tools/netsim/ansible/templates/ospf/eos.j2] ***
changed: [s3]
changed: [s1]
changed: [s2]

TASK [Figure out whether to deploy the module vxlan on current device] *********
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Find configuration template for vxlan] ***********************************
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
skipping: [s3]

TASK [Find configuration deployment deploy_script for vxlan] *******************
ok: [s1]
ok: [s2]
ok: [s3]

TASK [Deploy vxlan configuration] **********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for s1, s2, s3

TASK [eos_config: deploying vxlan from /home/pipi/net101/tools/netsim/ansible/templates/vxlan/eos.j2] ***
changed: [s3]
changed: [s2]
changed: [s1]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
h1                         : ok=11   changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h2                         : ok=11   changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h3                         : ok=11   changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h4                         : ok=11   changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
h5                         : ok=11   changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
s1                         : ok=29   changed=4    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
s2                         : ok=29   changed=4    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
s3                         : ok=29   changed=4    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   



The devices under test are VLAN-to-VXLAN bridges between two access VLANs
and two VXLAN VNIs. Both VLANs are using the same IP prefix to identify
potential inter-VLAN leaking.

* h1, h2 and h3 should be able to ping each other
* h4 and h5 should be able to ping each other
* h1 should not be able to reach h4 or h5

Please note it might take a while for the lab to work due to
STP learning phase

