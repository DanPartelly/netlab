[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [c1]
ok: [c2]
ok: [relay]
ok: [server]

TASK [Find device readiness script] ********************************************
ok: [c1]
ok: [c2]
ok: [relay]
ok: [server]

TASK [Wait for device to become ready] *****************************************
skipping: [c1]
skipping: [c2]
skipping: [server]
skipping: [relay]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for c1, c2, server, relay

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [c1]
ok: [c2]
ok: [relay]
ok: [server]

TASK [Find configuration template for initial] *********************************
ok: [c1]
ok: [c2]
ok: [server]
ok: [relay]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [c1]
skipping: [c2]
skipping: [server]
skipping: [relay]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [c1]
ok: [c2]
ok: [server]
ok: [relay]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/cumulus.yml for c1, c2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for server
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for relay

TASK [copy cumulus config to /tmp/config.sh] ***********************************
changed: [c2]
changed: [c1]

TASK [set_fact deployed_config] ************************************************
ok: [c1]
ok: [c2]

TASK [run /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/cumulus.j2] ***
changed: [c1]
changed: [c2]

TASK [run vtysh to import initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/cumulus.j2] ***
skipping: [c1]
skipping: [c2]

TASK [ios_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/ios.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [server]

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
changed: [relay]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [c1]
ok: [c2]
ok: [server]
ok: [relay]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for c1, c2, relay, server => (item=vrf)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for c1, c2, relay, server => (item=dhcp)

TASK [Figure out whether to deploy the module vrf on current device] ***********
ok: [c1]
ok: [c2]
ok: [relay]
ok: [server]

TASK [Find configuration template for vrf] *************************************
skipping: [c1]
skipping: [c2]
skipping: [server]
ok: [relay]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [c1]
skipping: [c2]
skipping: [relay]
skipping: [server]

TASK [Find configuration deployment deploy_script for vrf] *********************
skipping: [c1]
skipping: [c2]
skipping: [server]
ok: [relay]

TASK [Deploy vrf configuration] ************************************************
skipping: [c1]
skipping: [c2]
skipping: [server]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for relay

TASK [eos_config: deploying vrf from /home/pipi/net101/tools/netsim/ansible/templates/vrf/eos.j2] ***
ok: [relay]

TASK [Figure out whether to deploy the module dhcp on current device] **********
ok: [c1]
ok: [c2]
ok: [server]
ok: [relay]

TASK [Find configuration template for dhcp] ************************************
ok: [c1]
ok: [c2]
ok: [relay]
ok: [server]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [c1]
skipping: [c2]
skipping: [relay]
skipping: [server]

TASK [Find configuration deployment deploy_script for dhcp] ********************
ok: [c1]
ok: [c2]
ok: [server]
ok: [relay]

TASK [Deploy dhcp configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/cumulus.yml for c1, c2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for relay
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for server

TASK [copy cumulus config to /tmp/config.sh] ***********************************
changed: [c2]
changed: [c1]

TASK [set_fact deployed_config] ************************************************
ok: [c1]
ok: [c2]

TASK [run /tmp/config.sh to deploy dhcp config from /home/pipi/net101/tools/netsim/ansible/templates/dhcp/cumulus.j2] ***
changed: [c1]
changed: [c2]

TASK [run vtysh to import dhcp config from /home/pipi/net101/tools/netsim/ansible/templates/dhcp/cumulus.j2] ***
skipping: [c1]
skipping: [c2]

TASK [eos_config: deploying dhcp from /home/pipi/net101/tools/netsim/ansible/templates/dhcp/eos.j2] ***
changed: [relay]

TASK [ios_config: deploying dhcp from /home/pipi/net101/tools/netsim/ansible/templates/dhcp/ios.j2] ***
changed: [server]

PLAY [Deploy custom deployment templates] **************************************

TASK [Run custom configuration deployment scripts] *****************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-custom-config.yml for c1, c2 => (item=bounce)

TASK [Find configuration template] *********************************************
ok: [c1]
ok: [c2]

TASK [fail] ********************************************************************
skipping: [c1]
skipping: [c2]

TASK [Process template /home/pipi/net101/tools/tests/integration/dhcp/bounce.cumulus.j2 for c1] ***
skipping: [c1]
skipping: [c2]

TASK [Find custom configuration deployment script] *****************************
ok: [c1]
ok: [c2]

TASK [Run the configuration deployment script] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/cumulus.yml for c1, c2

TASK [copy cumulus config to /tmp/config.sh] ***********************************
changed: [c2]
changed: [c1]

TASK [set_fact deployed_config] ************************************************
ok: [c1]
ok: [c2]

TASK [run /tmp/config.sh to deploy bounce config from /home/pipi/net101/tools/tests/integration/dhcp/bounce.cumulus.j2] ***
changed: [c1]
changed: [c2]

TASK [run vtysh to import bounce config from /home/pipi/net101/tools/tests/integration/dhcp/bounce.cumulus.j2] ***
skipping: [c1]
skipping: [c2]

PLAY RECAP *********************************************************************
c1                         : ok=28   changed=6    unreachable=0    failed=0    skipped=12   rescued=0    ignored=0   
c2                         : ok=28   changed=6    unreachable=0    failed=0    skipped=12   rescued=0    ignored=0   
relay                      : ok=21   changed=2    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
server                     : ok=17   changed=2    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   



Use this topology to test the inter-VRF DHCPv4 relay functionality of your
device. Use 'netlab validate' to check whether your device propagated DHCPv4
requests from DHCP clients in VRF c_vrf to DHCP servers in global routing
table.

