[WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details
[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [h2]
ok: [h1]
ok: [p1]
ok: [p2]
ok: [pe2]

TASK [Find device readiness script] ********************************************
ok: [dut]
ok: [h1]
ok: [h2]
ok: [pe2]
ok: [p1]
ok: [p2]

TASK [Wait for device to become ready] *****************************************
skipping: [pe2]
skipping: [p1]
skipping: [p2]
skipping: [h1]
skipping: [h2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/vjunos-switch-clab.yml for dut

TASK [Wait for SSH server] *****************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/vm-clab-ssh-check.yml for dut

TASK [Execute local ssh command to check vjunos-switch readiness] **************
FAILED - RETRYING: [dut -> localhost]: Execute local ssh command to check vjunos-switch readiness (40 retries left).
FAILED - RETRYING: [dut -> localhost]: Execute local ssh command to check vjunos-switch readiness (39 retries left).
changed: [dut -> localhost]

TASK [Confirm dut SSH server works] ********************************************
ok: [dut] => 
  msg: Node dut is ready.

TASK [Wait for ge-0/0/0 interface] *********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/vjunos-switch.yml for dut

TASK [Wait for ge-0/0/0 to appear] *********************************************
ok: [dut]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, pe2, p1, p2, h1, h2

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [dut]
ok: [h1]
ok: [h2]
ok: [pe2]
ok: [p2]
ok: [p1]

TASK [Find configuration template for initial] *********************************
ok: [dut]
ok: [h2]
ok: [h1]
ok: [pe2]
ok: [p2]
ok: [p1]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    initial configuration for dut
    =========================================
    system {
      host-name dut
        static-host-mapping {
            pe2 inet 10.0.0.4;
            p1 inet 10.0.0.5;
            p2 inet 10.0.0.6;
            h1 inet 172.16.0.1;
            h2 inet 172.16.2.2;
        }
    }
  
  
    interfaces {
      ge-0/0/0 {
        mtu 1514;
      }
      ge-0/0/1 {
        mtu 1514;
      }
  
      lo0.0 {
  
          family inet {
            address 10.0.0.3/32;
          }
  
      }
      ge-0/0/0.0 {
        description "dut -> h1 [stub]";
  
          family inet {
            address 172.16.0.3/24;
          }
  
      }
      ge-0/0/1.0 {
        description "dut -> p1";
  
          family inet {
            address 172.16.1.3/24;
          }
  
      }
    }
    protocols {
      lldp {
        interface fxp0 {
          disable;
        }
        interface all;
      }
    }
ok: [h2] => 
  msg: |-
    initial configuration for h2
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    #
    # Interface addressing
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.2.2/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.2.2/24 dev eth1
    ip link set eth1 mtu 1500
    #
    # Add routes to IPv4 address pools pointing to the first neighbor on the first link
    #
    # If you need anything better, use FRR instead of Linux and start routing (or use IPv6)
    #
    # lan prefix: 172.16.0.0/16 local subnet: 172.16.2.0/24
    set +e
    ip route del 172.16.0.0/16 2>/dev/null
    set -e
    ip route add 172.16.0.0/16 via 172.16.2.4
    # loopback prefix: 10.0.0.0/24 local subnet: 172.16.2.0/24
    set +e
    ip route del 10.0.0.0/24 2>/dev/null
    set -e
    ip route add 10.0.0.0/24 via 172.16.2.4
    # mgmt prefix: 192.168.17.0/24 local subnet: 172.16.2.0/24
    # p2p prefix: 10.1.0.0/16 local subnet: 172.16.2.0/24
    set +e
    ip route del 10.1.0.0/16 2>/dev/null
    set -e
    ip route add 10.1.0.0/16 via 172.16.2.4
    # router_id prefix: 10.0.0.0/24 local subnet: 172.16.2.0/24
    # vrf_loopback prefix: 10.2.0.0/24 local subnet: 172.16.2.0/24
    set +e
    ip route del 10.2.0.0/24 2>/dev/null
    set -e
    ip route add 10.2.0.0/24 via 172.16.2.4
    #
    # Print the final routing table
    ip route
ok: [h1] => 
  msg: |-
    initial configuration for h1
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    #
    # Interface addressing
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.0.1/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.0.1/24 dev eth1
    ip link set eth1 mtu 1500
    #
    # Add routes to IPv4 address pools pointing to the first neighbor on the first link
    #
    # If you need anything better, use FRR instead of Linux and start routing (or use IPv6)
    #
    # lan prefix: 172.16.0.0/16 local subnet: 172.16.0.0/24
    set +e
    ip route del 172.16.0.0/16 2>/dev/null
    set -e
    ip route add 172.16.0.0/16 via 172.16.0.3
    # loopback prefix: 10.0.0.0/24 local subnet: 172.16.0.0/24
    set +e
    ip route del 10.0.0.0/24 2>/dev/null
    set -e
    ip route add 10.0.0.0/24 via 172.16.0.3
    # mgmt prefix: 192.168.17.0/24 local subnet: 172.16.0.0/24
    # p2p prefix: 10.1.0.0/16 local subnet: 172.16.0.0/24
    set +e
    ip route del 10.1.0.0/16 2>/dev/null
    set -e
    ip route add 10.1.0.0/16 via 172.16.0.3
    # router_id prefix: 10.0.0.0/24 local subnet: 172.16.0.0/24
    # vrf_loopback prefix: 10.2.0.0/24 local subnet: 172.16.0.0/24
    set +e
    ip route del 10.2.0.0/24 2>/dev/null
    set -e
    ip route add 10.2.0.0/24 via 172.16.0.3
    #
    # Print the final routing table
    ip route
ok: [p2] => 
  msg: |-
    initial configuration for p2
    =========================================
    hostname p2
    !
    logging monitor debugging
    !
    lldp run
    ip routing
    !
    !
    ip host dut 10.0.0.3 172.16.0.3 172.16.1.3
    ip host h1 172.16.0.1
    ip host h2 172.16.2.2
    ip host p1 10.0.0.5 172.16.1.5 10.1.0.1
    ip host pe2 10.0.0.4 10.1.0.6 172.16.2.4
    !
    interface Management1
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     no shutdown
     ip address 10.0.0.6/32
    !
    interface Ethernet1
     no shutdown
     no switchport
     description p2 -> p1
     ip address 10.1.0.2/30
    !
     mac-address 52dc.cafe.0601
    !
    interface Ethernet2
     no shutdown
     no switchport
     description p2 -> pe2
     ip address 10.1.0.5/30
    !
     mac-address 52dc.cafe.0602
    !
ok: [pe2] => 
  msg: |-
    initial configuration for pe2
    =========================================
    hostname pe2
    !
    logging monitor debugging
    !
    lldp run
    ip routing
    !
    !
    ip host dut 10.0.0.3 172.16.0.3 172.16.1.3
    ip host h1 172.16.0.1
    ip host h2 172.16.2.2
    ip host p1 10.0.0.5 172.16.1.5 10.1.0.1
    ip host p2 10.0.0.6 10.1.0.2 10.1.0.5
    !
    interface Management1
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     no shutdown
     ip address 10.0.0.4/32
    !
    interface Ethernet1
     no shutdown
     no switchport
     description pe2 -> p2
     ip address 10.1.0.6/30
    !
     mac-address 52dc.cafe.0401
    !
    interface Ethernet2
     no shutdown
     no switchport
     description pe2 -> h2 [stub]
     ip address 172.16.2.4/24
    !
     mac-address 52dc.cafe.0402
    !
ok: [p1] => 
  msg: |-
    initial configuration for p1
    =========================================
    hostname p1
    !
    logging monitor debugging
    !
    lldp run
    ip routing
    !
    !
    ip host dut 10.0.0.3 172.16.0.3 172.16.1.3
    ip host h1 172.16.0.1
    ip host h2 172.16.2.2
    ip host p2 10.0.0.6 10.1.0.2 10.1.0.5
    ip host pe2 10.0.0.4 10.1.0.6 172.16.2.4
    !
    interface Management1
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     no shutdown
     ip address 10.0.0.5/32
    !
    interface Ethernet1
     no shutdown
     no switchport
     description p1 -> dut
     ip address 172.16.1.5/24
    !
     mac-address 52dc.cafe.0501
    !
    interface Ethernet2
     no shutdown
     no switchport
     description p1 -> p2
     ip address 10.1.0.1/30
    !
     mac-address 52dc.cafe.0502
    !

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [dut]
ok: [pe2]
ok: [h1]
ok: [h2]
ok: [p2]
ok: [p1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/junos.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for pe2, p1, p2
included: /home/pipi/net101/tools/netsim/ansible/tasks/linux/initial-clab.yml for h1, h2

TASK [junos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/junos.j2] ***
changed: [dut]

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [pe2]
changed: [p1]
changed: [p2]

TASK [set_fact] ****************************************************************
ok: [h1]
ok: [h2]

TASK [Create initial container setup from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [Initial container configuration via /tmp/config-AhtlcXpe-h1.sh] **********
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [file] ********************************************************************
changed: [h2 -> localhost]
changed: [h1 -> localhost]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [p1]
ok: [p2]
ok: [pe2]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, p1, p2, pe2 => (item=bgp)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, p1, p2, pe2 => (item=isis)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, p1, p2, pe2 => (item=sr)

TASK [Figure out whether to deploy the module bgp on current device] ***********
ok: [dut]
ok: [p1]
ok: [p2]
ok: [pe2]

TASK [Find configuration template for bgp] *************************************
skipping: [p1]
skipping: [p2]
ok: [dut]
ok: [pe2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [p1]
skipping: [p2]
ok: [dut] => 
  msg: |-
    bgp configuration for dut
    =========================================
    routing-options {
      autonomous-system 65001;
      router-id 10.0.0.3
    }
    policy-options {
      delete: policy-statement ibgp-export;
      delete: policy-statement ebgp-export;
    }
    policy-options {
      policy-statement ibgp-export {
        term advertise {
          from {
            protocol direct;
            interface [ lo0.0 ge-0/0/0.0 ];
          }
          then accept;
        }
        term next-hop-self {
          from {
            route-type external;
          }
          then {
            next-hop self;
          }
        }
      }
      policy-statement ebgp-export {
        term advertise {
          from {
            protocol direct;
            interface [  ge-0/0/0.0 ];
          }
          then accept;
        }
      }
    }
    protocols {
      delete: bgp;
    }
    protocols {
      bgp {
        group ibgp-peers-ipv4 {
          type internal;
          export ibgp-export;
          advertise-inactive;
          local-address 10.0.0.3;
          neighbor 10.0.0.4 {
            description pe2;
          }
        }
        group ebgp-peers {
          export ebgp-export;
          advertise-inactive;
        }
      }
    }
ok: [pe2] => 
  msg: |-
    bgp configuration for pe2
    =========================================
    !
    route-map next-hop-self-ipv4 permit 10
       match route-type external
       set ip next-hop peer-address
    !
    route-map next-hop-self-ipv4 permit 20
    !
    !
    router bgp 65001
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.4
    !
      neighbor 10.0.0.3 remote-as 65001
      neighbor 10.0.0.3 description dut
      neighbor 10.0.0.3 update-source Loopback0
      neighbor 10.0.0.3 send-community standard extended large
    !
    !
     address-family ipv4
    !
    !
      network 172.16.2.0/24
    !
    !
      neighbor 10.0.0.3 activate
      neighbor 10.0.0.3 route-map next-hop-self-ipv4 out
    !

TASK [Find configuration deployment deploy_script for bgp] *********************
skipping: [p1]
skipping: [p2]
ok: [dut]
ok: [pe2]

TASK [Deploy bgp configuration] ************************************************
skipping: [p1]
skipping: [p2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/junos.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for pe2

TASK [junos_config: deploying bgp from /home/pipi/net101/tools/netsim/ansible/templates/bgp/junos.j2] ***
[WARNING]:  statement not found
changed: [dut]

TASK [eos_config: deploying bgp from /home/pipi/net101/tools/netsim/ansible/templates/bgp/eos.j2] ***
changed: [pe2]

TASK [Figure out whether to deploy the module isis on current device] **********
ok: [dut]
ok: [p1]
ok: [pe2]
ok: [p2]

TASK [Find configuration template for isis] ************************************
ok: [dut]
ok: [p1]
ok: [pe2]
ok: [p2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [p1] => 
  msg: |-
    isis configuration for p1
    =========================================
    !
    router isis Gandalf
      log-adjacency-changes
      is-hostname p1
      is-type level-2
      net 49.0001.0000.0000.0005.00
      address-family ipv4 unicast
    !
    interface Loopback0
      isis enable Gandalf
    !
    interface Ethernet1
    ! p1 -> dut
      isis enable Gandalf
      isis network point-to-point
    !
    interface Ethernet2
    ! p1 -> p2
      isis enable Gandalf
      isis network point-to-point
    !
ok: [dut] => 
  msg: |-
    isis configuration for dut
    =========================================
    protocols {
      delete: isis;
    }
    protocols {
      isis {
        interface lo0.0;
        interface ge-0/0/1.0 {
          point-to-point;
        }
      }
    }
  
  
    interfaces {
      lo0 {
        unit 0 {
          family iso {
            address 49.0001.0000.0000.0003.00
          }
        }
      }
      ge-0/0/1.0 {
  
          family iso;
  
      }
    }
ok: [pe2] => 
  msg: |-
    isis configuration for pe2
    =========================================
    !
    router isis Gandalf
      log-adjacency-changes
      is-hostname pe2
      is-type level-2
      net 49.0001.0000.0000.0004.00
      address-family ipv4 unicast
    !
    interface Loopback0
      isis enable Gandalf
    !
    interface Ethernet1
    ! pe2 -> p2
      isis enable Gandalf
      isis network point-to-point
    !
ok: [p2] => 
  msg: |-
    isis configuration for p2
    =========================================
    !
    router isis Gandalf
      log-adjacency-changes
      is-hostname p2
      is-type level-2
      net 49.0001.0000.0000.0006.00
      address-family ipv4 unicast
    !
    interface Loopback0
      isis enable Gandalf
    !
    interface Ethernet1
    ! p2 -> p1
      isis enable Gandalf
      isis network point-to-point
    !
    interface Ethernet2
    ! p2 -> pe2
      isis enable Gandalf
      isis network point-to-point
    !

TASK [Find configuration deployment deploy_script for isis] ********************
ok: [dut]
ok: [p2]
ok: [p1]
ok: [pe2]

TASK [Deploy isis configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/junos.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for p1, p2, pe2

TASK [junos_config: deploying isis from /home/pipi/net101/tools/netsim/ansible/templates/isis/junos.j2] ***
changed: [dut]

TASK [eos_config: deploying isis from /home/pipi/net101/tools/netsim/ansible/templates/isis/eos.j2] ***
changed: [p1]
changed: [p2]
changed: [pe2]

TASK [Figure out whether to deploy the module sr on current device] ************
ok: [dut]
ok: [p1]
ok: [p2]
ok: [pe2]

TASK [Find configuration template for sr] **************************************
ok: [dut]
ok: [p1]
ok: [p2]
ok: [pe2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    sr configuration for dut
    =========================================
    interfaces {
        ge-0/0/0.0 {
            mtu 9192;
  
                family mpls;
  
        }
        ge-0/0/1.0 {
            mtu 9192;
  
                family mpls;
  
        }
    }
    protocols {
        isis {
            interface ge-0/0/0.0 {
                level 2 {
                    post-convergence-lfa {
                        node-protection cost 16777214;
                    }
                }
            }
            interface ge-0/0/1.0 {
                level 2 {
                    post-convergence-lfa {
                        node-protection cost 16777214;
                    }
                }
            }
            source-packet-routing {
                node-segment {
                    ipv4-index 403;
                    ipv6-index 603;
                }
            }
            level 1 disable;
            level 2 wide-metrics-only;
            backup-spf-options {
                use-post-convergence-lfa maximum-backup-paths 2;
                use-source-packet-routing;
                }
        }
        mpls {
            interface ge-0/0/0.0;
            interface ge-0/0/1.0;
        }
    }
ok: [p2] => 
  msg: |-
    sr configuration for p2
    =========================================
    mpls ip
    !
    router isis Gandalf
      router-id ipv4 10.0.0.3
      segment-routing mpls
        no shutdown
    !
    interface Loopback0
      node-segment ipv4 index 6
ok: [p1] => 
  msg: |-
    sr configuration for p1
    =========================================
    mpls ip
    !
    router isis Gandalf
      router-id ipv4 10.0.0.3
      segment-routing mpls
        no shutdown
    !
    interface Loopback0
      node-segment ipv4 index 5
ok: [pe2] => 
  msg: |-
    sr configuration for pe2
    =========================================
    mpls ip
    !
    router isis Gandalf
      router-id ipv4 10.0.0.3
      segment-routing mpls
        no shutdown
    !
    interface Loopback0
      node-segment ipv4 index 4

TASK [Find configuration deployment deploy_script for sr] **********************
ok: [dut]
ok: [p1]
ok: [p2]
ok: [pe2]

TASK [Deploy sr configuration] *************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/junos.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for p1, p2, pe2

TASK [junos_config: deploying sr from /home/pipi/net101/tools/netsim/ansible/templates/sr/junos.j2] ***
fatal: [dut]: FAILED! => changed=false 
  msg: |-
    <?xml version="1.0" encoding="UTF-8"?><rpc-error xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:junos="http://xml.juniper.net/junos/23.2R1.14/junos" xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0">
    <error-type>protocol</error-type>
    <error-tag>operation-failed</error-tag>
    <error-severity>error</error-severity>
    <error-message>syntax error</error-message>
    <error-info>
    <bad-element>mtu</bad-element>
    </error-info>
    </rpc-error>

TASK [eos_config: deploying sr from /home/pipi/net101/tools/netsim/ansible/templates/sr/eos.j2] ***
changed: [p1]
changed: [p2]
changed: [pe2]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
dut                        : ok=36   changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
h1                         : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
h2                         : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
p1                         : ok=26   changed=3    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
p2                         : ok=26   changed=3    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
pe2                        : ok=31   changed=4    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

Fatal error in netlab: Executing Ansible playbook /home/pipi/net101/tools/netsim/ansible/initial-config.ansible failed
Error executing ansible-playbook /home/pipi/net101/tools/netsim/ansible/initial-config.ansible:
  Command '['ansible-playbook', '/home/pipi/net101/tools/netsim/ansible/initial-config.ansible']' returned non-zero exit status 2.
