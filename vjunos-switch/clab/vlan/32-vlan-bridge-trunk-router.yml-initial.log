[WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details
[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [h1]
ok: [h2]
ok: [s1]
ok: [r1]
ok: [s2]

TASK [Find device readiness script] ********************************************
ok: [h1]
ok: [h2]
ok: [s1]
ok: [s2]
ok: [r1]

TASK [Wait for device to become ready] *****************************************
skipping: [h1]
skipping: [h2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/vjunos-switch-clab.yml for s1, s2, r1

TASK [Wait for SSH server] *****************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/vm-clab-ssh-check.yml for s1, s2, r1

TASK [Execute local ssh command to check vjunos-switch readiness] **************
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (40 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (40 retries left).
FAILED - RETRYING: [r1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (40 retries left).
FAILED - RETRYING: [r1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (39 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (39 retries left).
FAILED - RETRYING: [r1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (38 retries left).
changed: [r1 -> localhost]
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (39 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (38 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (38 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (37 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (37 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (36 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (36 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (35 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (35 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (34 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (34 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (33 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (33 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (32 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (32 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (31 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (31 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (30 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (30 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (29 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (29 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (28 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (28 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (27 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (27 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (26 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (26 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (25 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (25 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (24 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (24 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (23 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (23 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (22 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (22 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (21 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (21 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (20 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (20 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (19 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (19 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (18 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (18 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (17 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (17 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (16 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (16 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (15 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (15 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (14 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (14 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (13 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (13 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (12 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (12 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (11 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (11 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (10 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (10 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (9 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (9 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (8 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (8 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (7 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (7 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (6 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (6 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (5 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (5 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (4 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (4 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (3 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (3 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (2 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (2 retries left).
FAILED - RETRYING: [s1 -> localhost]: Execute local ssh command to check vjunos-switch readiness (1 retries left).
FAILED - RETRYING: [s2 -> localhost]: Execute local ssh command to check vjunos-switch readiness (1 retries left).
fatal: [s1 -> localhost]: FAILED! => changed=true 
  attempts: 40
  cmd: |-
    sshpass -p 'admin@123' \
    ssh -o StrictHostKeyChecking=no \
        -o UserKnownHostsFile=/dev/null admin@clab-ml_17-s1 \
        'show version'
  delta: '0:00:00.123608'
  end: '2024-07-28 17:10:34.692503'
  msg: non-zero return code
  rc: 5
  start: '2024-07-28 17:10:34.568895'
  stderr: 'Warning: Permanently added ''clab-ml_17-s1'' (ED25519) to the list of known hosts.'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
fatal: [s2 -> localhost]: FAILED! => changed=true 
  attempts: 40
  cmd: |-
    sshpass -p 'admin@123' \
    ssh -o StrictHostKeyChecking=no \
        -o UserKnownHostsFile=/dev/null admin@clab-ml_17-s2 \
        'show version'
  delta: '0:00:00.136234'
  end: '2024-07-28 17:10:41.713241'
  msg: non-zero return code
  rc: 5
  start: '2024-07-28 17:10:41.577007'
  stderr: 'Warning: Permanently added ''clab-ml_17-s2'' (ED25519) to the list of known hosts.'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>

TASK [Confirm r1 SSH server works] *********************************************
ok: [r1] => 
  msg: Node r1 is ready.

TASK [Wait for ge-0/0/0 interface] *********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/vjunos-switch.yml for r1

TASK [Wait for ge-0/0/0 to appear] *********************************************
ok: [r1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for h1, h2, r1

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [h1]
ok: [h2]
ok: [r1]

TASK [Find configuration template for initial] *********************************
ok: [h1]
ok: [h2]
ok: [r1]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [h1] => 
  msg: |-
    initial configuration for h1
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    #
    # Interface addressing
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.0.1/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.0.1/24 dev eth1
    ip link set eth1 mtu 1500
    #
    # Add routes to IPv4 address pools pointing to the first neighbor on the first link
    #
    # If you need anything better, use FRR instead of Linux and start routing (or use IPv6)
    #
    # lan prefix: 172.16.0.0/16 local subnet: 172.16.0.0/24
    set +e
    ip route del 172.16.0.0/16 2>/dev/null
    set -e
    ip route add 172.16.0.0/16 via 172.16.0.5
    # loopback prefix: 10.0.0.0/24 local subnet: 172.16.0.0/24
    set +e
    ip route del 10.0.0.0/24 2>/dev/null
    set -e
    ip route add 10.0.0.0/24 via 172.16.0.5
    # mgmt prefix: 192.168.17.0/24 local subnet: 172.16.0.0/24
    # p2p prefix: 10.1.0.0/16 local subnet: 172.16.0.0/24
    set +e
    ip route del 10.1.0.0/16 2>/dev/null
    set -e
    ip route add 10.1.0.0/16 via 172.16.0.5
    # router_id prefix: 10.0.0.0/24 local subnet: 172.16.0.0/24
    # vrf_loopback prefix: 10.2.0.0/24 local subnet: 172.16.0.0/24
    set +e
    ip route del 10.2.0.0/24 2>/dev/null
    set -e
    ip route add 10.2.0.0/24 via 172.16.0.5
    #
    # Print the final routing table
    ip route
ok: [h2] => 
  msg: |-
    initial configuration for h2
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    #
    # Interface addressing
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.1.2/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.1.2/24 dev eth1
    ip link set eth1 mtu 1500
    #
    # Add routes to IPv4 address pools pointing to the first neighbor on the first link
    #
    # If you need anything better, use FRR instead of Linux and start routing (or use IPv6)
    #
    # lan prefix: 172.16.0.0/16 local subnet: 172.16.1.0/24
    set +e
    ip route del 172.16.0.0/16 2>/dev/null
    set -e
    ip route add 172.16.0.0/16 via 172.16.1.5
    # loopback prefix: 10.0.0.0/24 local subnet: 172.16.1.0/24
    set +e
    ip route del 10.0.0.0/24 2>/dev/null
    set -e
    ip route add 10.0.0.0/24 via 172.16.1.5
    # mgmt prefix: 192.168.17.0/24 local subnet: 172.16.1.0/24
    # p2p prefix: 10.1.0.0/16 local subnet: 172.16.1.0/24
    set +e
    ip route del 10.1.0.0/16 2>/dev/null
    set -e
    ip route add 10.1.0.0/16 via 172.16.1.5
    # router_id prefix: 10.0.0.0/24 local subnet: 172.16.1.0/24
    # vrf_loopback prefix: 10.2.0.0/24 local subnet: 172.16.1.0/24
    set +e
    ip route del 10.2.0.0/24 2>/dev/null
    set -e
    ip route add 10.2.0.0/24 via 172.16.1.5
    #
    # Print the final routing table
    ip route
ok: [r1] => 
  msg: |-
    initial configuration for r1
    =========================================
    system {
      host-name r1
        static-host-mapping {
            h1 inet 172.16.0.1;
            h2 inet 172.16.1.2;
            s1 inet 10.0.0.3;
            s2 inet 10.0.0.4;
        }
    }
  
  
    interfaces {
      ge-0/0/0 {
        mtu 1514;
      }
      ge-0/0/1 {
        mtu 1514;
      }
  
      lo0.0 {
  
          family inet {
            address 10.0.0.5/32;
          }
  
      }
      ge-0/0/0.0 {
        description "r1 -> [h1,s1,s2]";
  
          family inet {
            address 172.16.0.5/24;
          }
  
      }
      ge-0/0/1.0 {
        description "r1 -> [h2,s1,s2]";
  
          family inet {
            address 172.16.1.5/24;
          }
  
      }
    }
    protocols {
      lldp {
        interface fxp0 {
          disable;
        }
        interface all;
      }
    }

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [h1]
ok: [h2]
ok: [r1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/linux/initial-clab.yml for h1, h2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/junos.yml for r1

TASK [set_fact] ****************************************************************
ok: [h1]
ok: [h2]

TASK [Create initial container setup from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [h2 -> localhost]
changed: [h1 -> localhost]

TASK [Initial container configuration via /tmp/config-kIuUzHZb-h1.sh] **********
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [file] ********************************************************************
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [junos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/junos.j2] ***
changed: [r1]

PLAY [Deploy module-specific configurations] ***********************************

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
h1                         : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
h2                         : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
r1                         : ok=15   changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
s1                         : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
s2                         : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

Fatal error in netlab: Executing Ansible playbook /home/pipi/net101/tools/netsim/ansible/initial-config.ansible failed
Error executing ansible-playbook /home/pipi/net101/tools/netsim/ansible/initial-config.ansible:
  Command '['ansible-playbook', '/home/pipi/net101/tools/netsim/ansible/initial-config.ansible']' returned non-zero exit status 2.
